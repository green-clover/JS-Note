JavaScript (Mutable vs Immutable)

immutable рђєрђГрђ»рђљрђгрђђ value рђЋрђ╝рђ▒рђгрђёрђ║рђИрђюрђГрђ»рђирђЎрђЏрђљрђгрђђрђГрђ»рђЋрђ╝рђ▒рђгрђЂрђ╗рђёрђ║рђљрђг
mutable рђєрђГрђ»рђљрђгрђђ value рђЋрђ╝рђ▒рђгрђёрђ║рђИрђюрђГрђ»рђирђЏрђљрђџрђ║


Immutable
Immutable рђЉрђ▓рђЎрђЙрђг Primitive Data Types рђљрђйрђ▒рђЋрђФрђљрђџрђ║
example рђАрђћрђ▒рђћрђ▓рђирђєрђГрђ»рђЏрђёрђ║ string, number рђљрђГрђ»рђирђђрђГрђ» declare рђюрђ»рђЋрђ║рђюрђГрђ»рђђрђ║рђљрђгрђћрђ▓рђи
рђърђ░рђљрђГрђ»рђи рђљрђћрђ║рђќрђГрђ»рђИрђђ рђЋрђ╝рђ▒рђгрђёрђ║рђИрђЎрђЏрђљрђ▒рђгрђирђўрђ░рђИ

( рђюрђгрђЁрђгрђИрђћрђ▒рђљрђџрђ║рђћрђ▒рђгрђ║ рђљрђћрђ║рђќрђГрђ»рђИрђђ const рђћрђ▓рђи рђЎрђђрђ╝рђ▒рђірђгрђЉрђгрђИрђЏрђёрђ║
  рђЁрђГрђљрђ║рђђрђ╝рђГрђ»рђђрђ║рђЋрђ╝рђёрђ║рђюрђГрђ»рђирђЏрђљрђџрђ║рђюрђ▒ :P ) 

let name = "Clover"
name = "Sweet"

рђАрђ▓рђирђюрђГрђ»рђюрђ»рђЋрђ║рђюрђГрђ»рђирђЏрђљрђџрђ║рђюрђ▒ рђАрђ▓рђирђљрђгрђђ рђђрђ╗рђћрђ▒рђгрђ║рђљрђГрђ»рђђ рђЋрђ╝рђёрђ║рђљрђџрђ║рђюрђГрђ»рђирђЎрђЂрђ▒рђФрђ║рђўрђ░рђИ
рђљрђћрђ║рђќрђГрђ»рђИ рђАрђърђЁрђ║рђљрђЁрђ║рђЂрђ» reassign рђюрђ»рђЋрђ║рђЋрђ▒рђИрђюрђГрђ»рђђрђ║рђљрђгрђђрђГрђ» рђЂрђ▒рђФрђ║рђљрђџрђ║

рђЋрђ╝рђёрђ║рђљрђџрђ║рђєрђГрђ»рђљрђгрђђрђГрђ» рђєрђђрђ║рђђрђ╝рђірђирђ║рђЎрђџрђ║рђћрђ▒рђгрђ║
let name = "Clover"
let u_name = name.toUpperCase()
name рђђрђГрђ» upper case рђЋрђ╝рђ▒рђгрђёрђ║рђИрђюрђГрђ»рђђрђ║рђљрђџрђ║ 
рђЎрђ░рђЏрђёрђ║рђИ рђљрђћрђ║рђќрђГрђ»рђИрђќрђ╝рђЁрђ║рђљрђ▓рђи name рђЉрђ▓рђђ "Clover" рђђ рђљрђћрђ║рђќрђГрђ»рђИрђЎрђЋрђ╝рђ▒рђгрђёрђ║рђИрђърђйрђгрђИрђўрђ░рђИ
new string рђљрђЁрђ║рђЂрђ» return рђюрђ»рђЋрђ║рђЋрђ▒рђИрђюрђГрђ»рђђрђ║рђљрђг

let a = 5;
let b = 10;
a = b
a++
console.log(a) //11 
console.log(b) //10 

b рђђрђГрђ» a рђЉрђ▓ reassign рђЋрђ╝рђћрђ║рђюрђ»рђЋрђ║рђюрђГрђ»рђђрђ║рђЋрђ╝рђ«рђИ a рђђрђГрђ» 1 рђљрђГрђ»рђИрђљрђџрђ║
b рђђ рђЎрђЋрђ╝рђ▒рђгрђёрђ║рђИрђърђйрђгрђИрђўрђ░рђИ 10 рђђ 10 рђЋрђ▓ рђўрђгрђюрђГрђ»рђирђюрђ▓рђєрђГрђ»рђљрђ▒рђгрђи
Primitive Data Types рђљрђйрђ▒рђђ Mutable  рђќрђ╝рђЁрђ║рђюрђГрђ»рђи 

..................

Note: 
рђђрђ╗рђћрђ▒рђгрђ║рђљрђГрђ»рђирђђ Primitive Data Types рђќрђ╝рђЁрђ║рђљрђ▓рђи variable рђљрђЁрђ║рђЂрђ»
declare рђюрђ»рђЋрђ║рђюрђГрђ»рђђрђ║рђЏрђёрђ║ memory рђЋрђ▒рђФрђ║рђЎрђЙрђг рђћрђ▒рђЏрђгрђџрђ░рђърђйрђгрђИрђљрђџрђ║ 
let a = 10;

рђАрђ▓рђи variable рђђрђГрђ» рђћрђ▒рђгрђђрђ║рђљрђЁрђ║рђЂрђ»рђЉрђ▓ рђЉрђірђирђ║рђЋрђ╝рђ«рђИ рђЉрђЋрђ║рђђрђ╝рђ▒рђірђгрђюрђГрђ»рђђрђ║рђЏрђёрђ║
рђћрђ▒рђгрђђрђ║рђЉрђЋрђ║рђћрђ▒рђЏрђг рђљрђЁрђ║рђЂрђ»рђЉрђЋрђ║рђџрђ░рђърђйрђгрђИрђљрђџрђ║
let b = a;

a рђђ рђљрђЁрђ║рђћрђ▒рђЏрђг / b рђђ рђљрђЁрђ║рђћрђ▒рђЏрђг
рђърђ░рђђ рђћрђ▒рђЏрђг рђћрђЙрђЁрђ║рђЂрђ»рђџрђ░рђЉрђгрђИрђљрђ▓рђирђърђўрђ▒рђгрђќрђ╝рђЁрђ║рђърђйрђгрђИрђљрђџрђ║ 

рђњрђ»рђљрђГрђџ рђљрђЁрђ║рђЂрђ»рђђрђГрђ» рђЋрђ╝рђёрђ║рђюрђГрђ»рђђрђ║рђЏрђёрђ║ рђЋрђЉрђЎ рђљрђЁрђ║рђЂрђ»рђђ рђЎрђЋрђ╝рђ▒рђгрђёрђ║рђИрђърђйрђгрђИрђўрђ░рђИ 
рђўрђгрђюрђГрђ»рђирђюрђ▓рђєрђГрђ»рђЏрђёрђ║
рђърђ░рђљрђГрђ»рђирђџрђ░рђЉрђгрђИрђљрђ▓рђи рђћрђ▒рђЏрђг рђљрђйрђ▒рђђ рђЎрђљрђ░рђюрђГрђ»рђи

..................

Mutable
array, object, function рђљрђйрђ▒рђђрђГрђ» mutable рђюрђ»рђЋрђ║рђюрђГрђ»рђирђЏрђљрђџрђ║

let clover = {
    id: 1,
    name: "Clover",
}
let new_obj = clover
new_obj.name = "Testing"

рђђрђ╗рђћрђ▒рђгрђ║рђљрђГрђ»рђирђђ clover рђєрђГрђ»рђљрђ▓рђи variable рђљрђЁрђ║рђЂрђ»рђђрђ╝рђ▒рђірђгрђљрђџрђ║
рђАрђ▓рђирђљрђгрђђрђГрђ» new_obj рђЉрђ▓ рђЉрђЋрђ║рђЉрђірђирђ║ рђюрђГрђ»рђђрђ║рђљрђџрђ║
new_obj рђЉрђ▓рђђ name рђђрђГрђ» рђЋрђ╝рђёрђ║рђюрђГрђ»рђђрђ║рђљрђџрђ║

clover { id: 1, name: 'Testing' }
рђЁрђЁрђЂрђ╗рђёрђ║рђИрђђрђ╝рђ▒рђірђгрђЉрђгрђИрђљрђ▓рђи clover рђђ Testing рђќрђ╝рђЁрђ║рђърђйрђгрђИрђљрђџрђ║

рђўрђгрђюрђГрђ»рђирђюрђ▓рђєрђГрђ»рђЏрђёрђ║ object рђљрђйрђ▒рђђ Mutable рђќрђ╝рђЁрђ║рђюрђГрђ»рђи
рђЎрђ░рђЏрђёрђ║рђИрђљрђћрђ║рђќрђГрђ»рђИрђЋрђ╝рђ▒рђгрђёрђ║рђИрђърђйрђгрђИрђљрђг

..................

Note:

рђђрђ╗рђћрђ▒рђгрђ║рђљрђГрђ»рђирђђ object рђђрђГрђ» рђђрђ╝рђ▒рђірђгрђюрђГрђ»рђђрђ║рђљрђгрђћрђ▓рђи
memory рђЋрђ▒рђФрђ║рђЎрђЙрђгрђђ рђърђ░рђирђЏрђ▓рђи address рђюрђ▒рђгрђђрђ║рђЋрђ▓рђърђГрђЎрђ║рђИрђЉрђгрђИрђљрђг
рђљрђђрђџрђирђ║ object рђђ Heap memory рђЋрђ▒рђФрђ║рђЎрђЙрђгрђЏрђЙрђГрђљрђџрђ║
рђЋрђ»рђХрђюрђ▒рђИрђђрђГрђ» рђђрђ╝рђірђирђ║рђюрђГрђ»рђђрђ║рђЏрђёрђ║ рђћрђірђ║рђИрђћрђірђ║рђИрђЏрђЙрђёрђ║рђИрђърђйрђгрђИрђЎрђџрђ║

let clover = {
    id: 1,
    name: "Clover",
}

рђАрђ▓рђирђљрђ▒рђгрђи рђАрђ▓рђи clover object рђђрђГрђ» new_obj рђЉрђ▓
рђЉрђЋрђ║рђЉрђірђирђ║рђюрђГрђ»рђђрђ║рђљрђ▒рђгрђи clover object рђЏрђ▓рђи address
рђђрђГрђ»рђЋрђ▓ рђЉрђірђирђ║рђюрђГрђ»рђђрђ║рђљрђг
let new_obj = clover


clover рђћрђ▓рђи new_obj рђђ address рђљрђ░рђърђйрђгрђИрђљрђџрђ║
рђАрђ▓рђирђљрђ▒рђгрђи new_obj рђђрђГрђ» рђЋрђ╝рђёрђ║рђљрђгрђћрђ▓рђи clover рђЋрђФрђЋрђ╝рђ▒рђгрђёрђ║рђИрђърђйрђгрђИрђљрђџрђ║

рђЁрђЅрђ║рђИрђЁрђгрђИрђђрђ╝рђірђирђ║рђЎрђџрђ║рђћрђ▒рђгрђ║ рђЎрђ░рђЏрђёрђ║рђИ object рђЋрђФ рђЋрђ╝рђ▒рђгрђёрђ║рђИрђђрђ»рђћрђ║рђљрђ▒рђгрђи
рђђрђ╗рђћрђ▒рђгрђ║рђљрђГрђ»рђи code рђљрђйрђ▒рђЎрђЙрђг orignial рђљрђћрђ║рђќрђГрђ»рђИ рђЉрђ»рђљрђ║рђЋрђ╝рђЉрђгрђИрђљрђ▓рђирђћрђ▒рђЏрђгрђљрђйрђ▒рђЎрђЙрђг 
рђЋрђ╝рђърђћрђг рђЎрђљрђђрђ║рђћрђГрђ»рђёрђ║рђўрђ░рђИрђюрђгрђИ рђАрђ▓рђирђљрђгрђђрђГрђ» рђўрђџрђ║рђюрђГрђ»рђЉрђГрђћрђ║рђИрђЎрђюрђ▓рђєрђГрђ»рђљрђгрђЋрђ▒рђФрђи 

..................

let clover = {
    id: 1,
    name: "Clover",
}

let new_obj = {...clover}

spread operator рђђ object рђАрђърђЁрђ║рђљрђЁрђ║рђЂрђ»рђЉрђ▓рђђрђГрђ» (shallow copy) рђюрђ»рђЋрђ║рђЋрђ▒рђИрђюрђГрђ»рђђрђ║рђљрђг
рђърђ░рђљрђГрђ»рђи рђћрђЙрђЁрђ║рђЂрђ»рђђ address рђЎрђљрђ░рђљрђ▒рђгрђирђўрђ░рђИ

..................

let clover = {
    id: 1,
    name: "Clover",
}

let new_obj = Object.assign({}, clover)

Object.assign рђђ рђюрђірђ║рђИ target object рђЉрђ▓рђђрђГрђ» source objects 
рђљрђйрђ▒рђђрђГрђ» copy рђђрђ░рђИрђЉрђірђирђ║рђЋрђ▒рђИрђюрђГрђ»рђђрђ║рђљрђгрђЋрђ▓ 
{} рђђ target object рђќрђ╝рђЁрђ║рђЋрђ╝рђ«рђИ clover рђђ source object
рђќрђ╝рђЁрђ║рђърђйрђгрђИрђљрђг рђърђ░рђљрђГрђ»рђи рђћрђЙрђЁрђ║рђЂрђ»рђђ address рђЎрђљрђ░рђљрђ▒рђгрђирђўрђ░рђИ

..................


­ЪЇђ­ЪЇђ­ЪЇђ­ЪЇђ