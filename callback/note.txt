JavaScript ( Callback )

Callback рђђрђГрђ» рђђрђ╝рђгрђИрђќрђ░рђИрђљрђџрђ║ рђЏрђ▒рђИрђюрђірђ║рђИрђЏрђ▒рђИрђќрђ░рђИрђљрђџрђ║

Callback рђђ function рђўрђџрђ║рђАрђЂрђ╗рђГрђћрђ║рђЎрђЙрђгрђЂрђ▒рђФрђ║рђЎрђЙрђгрђюрђ▓рђєрђГрђ»рђЏрђёрђ║ 
рђёрђФрђћрђ▒рђгрђђрђ║рђђрђ╗рђюрђГрђ»рђЏрђёрђ║рђЂрђ▒рђФрђ║рђюрђГрђ»рђђрђ║рђЎрђџрђ║рђєрђГрђ»рђљрђгрђЎрђ╗рђГрђ»рђИ 

рђўрђгрђюрђГрђ»рђи рђђрђ╗рђћрђ▒рђгрђ║рђљрђГрђ»рђирђђ Callback рђюрђГрђ»рђљрђгрђюрђ▓рђєрђГрђ»рђЏрђёрђ║
JavaScript follows an event-driven programming paradigm.

Example рђАрђћрђ▒рђћрђ▓рђирђєрђГрђ»
рђђрђ╗рђћрђ▒рђгрђ║рђЎрђЙрђг рђюрђ»рђЋрђ║рђЁрђЏрђг рЂѓ рђЂрђ»рђЏрђЙрђГрђљрђџрђ║

рђљрђЁрђ║рђЂрђ»рђђ code рђЏрђ▒рђИрђЏрђЎрђџрђ║
рђћрђ▒рђгрђђрђ║рђљрђЁрђ║рђЂрђ»рђђ foodpanda рђђрђћрђ▒рђЎрђ»рђћрђирђ║рђЎрђЙрђгрђЁрђгрђИрђЎрђџрђ║

рђАрђЏрђёрђ║рђєрђ»рђХрђИ рђЎрђ»рђћрђирђ║рђЎрђЙрђгрђЎрђџрђ║ 
рђЋрђ╝рђ«рђИрђЏрђёрђ║ рђђрђ╗рђћрђ▒рђгрђ║рђђ code рђЉрђГрђ»рђёрђ║рђЏрђ▒рђИрђћрђ▒рђюрђГрђ»рђирђЏрђљрђџрђ║
rider рђђ рђюрђгрђЋрђГрђ»рђЏрђёрђ║ рђърђ░рђирђђрђ╗рђћрђ▒рђгрђирђ║рђђрђГрђ» рђќрђ»рђћрђ║рђИрђєрђђрђ║рђЎрђџрђ║
рђърђйрђгрђИрђџрђ░рђюрђГрђ»рђђрђ║рђЎрђџрђ║ 

рђАрђ▓рђирђАрђЂрђ╝рђ▒рђАрђћрђ▒рђЎрђЙрђг rider рђђ рђюрђгрђЎрђЋрђГрђ»рђирђЎрђЂрђ╗рђёрђ║рђИрђЉрђГрђ»рђёрђ║рђЁрђ▒рђгрђёрђирђ║рђћрђ▒рђЁрђЏрђгрђЎрђюрђГрђ»рђўрђ░рђИ
рђђрђГрђ»рђџрђ║рђюрђ»рђЋрђ║рђЁрђЏрђгрђЏрђЙрђГрђљрђгрђюрђ»рђЋрђ║рђЋрђ╝рђ«рђИ рђЁрђ▒рђгрђёрђирђ║рђћрђ▒рђЏрђ»рђХрђЋрђ▓ block рђќрђ╝рђЁрђ║рђЎрђћрђ▒рђўрђ░рђИ
рђЉрђГрђ»рђёрђ║рђЁрђ▒рђгрђёрђирђ║рђЁрђЏрђгрђЎрђюрђГрђ»рђљрђгрђђрђГрђ» (non-blocking) рђќрђ╝рђЁрђ║рђљрђџрђ║рђюрђГрђ»рђирђЂрђ▒рђФрђ║рђљрђџрђ║


*****************

function order(riderArrived){
    console.log("Order processing begins ....")
    setTimeout(riderArrived, 5000);
}

function riderArrived(){
    console.log("Order processing end ....")
}

function work() {
    console.log("Working ....")
}

order(riderArrived)
work()

// Order processing begins ....
// Working .... (5 seconds рђђрђ╝рђгрђЋрђ╝рђ«рђИрђЎрђЙ next line рђЋрђ▒рђФрђ║рђюрђгрђЎрђџрђ║ )
// Order processing end ....

*****************

order function рђЎрђЙрђг рђЁрђЁрђЂрђ╗рђёрђ║рђИ Order processing begins ....
рђАрђ▓рђирђљрђг run рђърђйрђгрђИрђљрђџрђ║ рђЋрђ╝рђ«рђИрђЏрђёрђ║ рђърђ░рђирђАрђ▒рђгрђђрђ║рђђ setTimeout рђђ 5s рђЁрђ▒рђгрђёрђирђ║
рђЏрђЎрђЙрђгрђЎрђГрђ»рђюрђГрђ»рђи рђърђ░рђЎрђЁрђ▒рђгрђёрђирђ║рђўрђ░рђИ work function рђєрђђрђ║рђърђйрђгрђИрђљрђџрђ║
рђЋрђ╝рђ«рђИрђЏрђёрђ║ рђърђ░рђўрђгрђЎрђЙ рђєрђђрђ║рђюрђ»рђЋрђ║рђЁрђЏрђгрђЎрђЏрђЙрђГрђљрђ▒рђгрђирђўрђ░рђИ 5s рђЋрђ╝рђірђирђ║рђърђйрђгрђИрђљрђ▒рђгрђи
setTimeout рђђрђГрђ» рђєрђђрђ║рђюрђ»рђЋрђ║рђљрђџрђ║

riderArrived рђєрђГрђ»рђљрђгрђђ Callback function рђЋрђФрђЋрђ▓
5s рђЋрђ╝рђірђирђ║рђљрђгрђћрђ▓рђи рђАрђ▓рђирђљрђгрђђрђГрђ»рђљрђћрђ║рђИрђЂрђ▒рђФрђ║рђЎрђЙрђгрђЋрђФ

Example рђєрђђрђ║рђђрђ╝рђірђирђ║рђЏрђАрђ▒рђгрђёрђ║

*****************

const add = (a,b) => a+b
const sub = (a,b) => a-b
const calculate = (a,b,callback) => {
    return callback(a, b)
}
console.log(calculate(20,10, add)) //30
console.log(calculate(20,10, sub)) //20

*****************

add, sub functions рђђ callback function рђђ
рђђрђ╗рђћрђ▒рђгрђ║рђљрђГрђ»рђирђђ Number рђћрђЙрђЁрђ║рђЂрђ»рђЋрђ▒рђФрђёрђ║рђИрђЂрђ╗рђёрђ║рђљрђџрђ║рђєрђГрђ»рђЏрђёрђ║ add 
function рђђрђГрђ» pass рђЋрђ▒рђИрђюрђГрђ»рђђрђ║рђЏрђ»рђХрђЋрђФрђЋрђ▓ рђћрђЙрђ»рђљрђ║рђЂрђ╗рђёрђ║рђЏрђёрђ║ sub рђђрђГрђ»
pass рђЋрђ▒рђИрђюрђГрђ»рђђрђ║рђЏрђ»рђХрђЋрђФрђЋрђ▓


рђњрђ«рђюрђ▒рђгрђђрђ║рђєрђГрђ» Callback function рђђрђГрђ» рђћрђгрђИрђюрђірђ║рђЎрђџрђ║рђюрђГрђ»рђирђЉрђёрђ║рђЋрђФрђљрђџрђ║

рђћрђірђ║рђИрђћрђірђ║рђИрђєрђђрђ║рђърђйрђгрђИрђђрђ╝рђірђирђ║рђЏрђАрђ▒рђгрђёрђ║

Sample рђћрђ▒рђгрђ║ :P

function getOrder(callback){
    console.log("order => ")
    return callback()
}

function getProduct(product, callback){
    console.log("product  => ", product)
    return callback()
}

function getCategory(category, callback){
    console.log("category => ", category)
    return callback()
}


getOrder(() => { 
    getProduct("Coffee", () => {
        getCategory("Drink", () => {
            console.log("finished");
        });
    });
});


getProduct, getCategory рђљрђГрђ»рђирђђрђГрђ» рђєрђёрђирђ║рђЋрђ╝рђ«рђИрђърђ»рђХрђИрђърђйрђгрђИрђљрђгрђг
2 рђЂрђ» рђЋрђ╝рђърђћрђг рђЎрђЏрђЙрђГрђЋрђ▒рђЎрђџрђирђ║ рђАрђЎрђ╗рђгрђИрђђрђ╝рђ«рђИрђєрђГрђ» callback hell рђќрђ╝рђЁрђ║рђърђйрђгрђИрђљрђџрђ║
рђЋрђ»рђХрђЉрђірђирђ║рђЋрђ▒рђИрђЉрђгрђИрђљрђџрђ║ callback hell example image

рђАрђ▓рђирђљрђ▒рђгрђи callback hell рђђрђГрђ» рђЏрђЙрђёрђ║рђИрђќрђГрђ»рђирђЏрђг async/await, Promise рђђрђГрђ» 
рђърђ»рђХрђИрђюрђгрђђрђ╝рђљрђџрђ║

await getOrder()
await getProduct()
await getCategory()

(or)

getOrder()
.then(result => getProduct(result))
.then(result2 => getCategory(result2));

Note: async/await, Promise рђђ sample рђЋрђ╝рђЉрђгрђИрђљрђгрђЎрђГрђ»рђюрђГрђ»рђи 
code рђЎрђЉрђірђирђ║рђЉрђгрђИрђўрђ░рђИ


order function рђЁрђЂрђ▒рђФрђ║рђљрђџрђ║ рђърђ░рђђ рђєрђђрђ║рђюрђ»рђЋрђ║рђћрђ▒рђљрђ»рђћрђ║рђИ
рђЎрђЁрђ▒рђгрђёрђирђ║рђўрђ▓ work function рђђрђГрђ» рђєрђђрђ║рђюрђ»рђЋрђ║рђърђйрђгрђИрђљрђџрђ║
(рђЁрђЅрђ║рђИрђЁрђгрђИрђЏрђЎрђЙрђгрђђ order рђђ рђўрђџрђ║рђћрђ▒рђЏрђгрђЎрђЙрђг рђєрђђрђ║рђюрђ»рђЋрђ║рђћрђ▒рђљрђгрђюрђ▓ 
рђърђ░рђђ рђЋрђ╝рђ«рђИрђЏрђёрђ║ рђўрђџрђ║рђюрђГрђ»рђърђГрђюрђ▓)
рђњрђ«рђўрђђрђ║рђЎрђЙрђг рђЋрђ╝рђћрђ║рђюрђгрђЏрђёрђ║ рђњрђ«рђўрђђрђ║рђђ рђюрђ»рђЋрђ║рђљрђгрђћрђ▓рђи рђљрђГрђ»рђђрђ║рђћрђ▒рђЏрђёрђ║ рђўрђџрђ║рђюрђГрђ»рђюрђ»рђЋрђ║рђЎрђюрђ▓

рђАрђ▓рђирђњрђФрђљрђйрђ▒ рђћрђгрђИрђюрђірђ║рђќрђГрђ»рђирђєрђГрђ»рђЏрђёрђ║ Event Loop, Call Stack, Callback Queue рђАрђ▓рђирђњрђФрђљрђйрђ▒
рђћрђгрђИрђюрђірђ║рђЏрђЋрђФрђЎрђџрђ║ :P


­ЪЇђ­ЪЇђ­ЪЇђ­ЪЇђ